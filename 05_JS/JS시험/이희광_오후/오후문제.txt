문제4. 
      1) 일반형 변수와 참조형 변수의 차이를 설명할 수 있는 함수를 작성하여
      실행 결과를 제시하고 실행결과가 나오는 과정을 설명하시오
      2) 참조형 변수의 변경과 재정의시 일어나는 차이를 설명할 수 있는 프로그램을 작성하여
      결과를 제시하고 결과가 다르게 나오는 이유를 기술하시오

문제5. 
      1) 문자열, 시작위치, 종료위치를 매개변수로 주면 
         주어진 문자열의 시작위치부터 종료위치 직전까지의 문자열을 결과로 반환하는 함수를 작성하고
	 실행결과를 제시하시오(주의: built in 함수를 쓰지말고 직접 함수를 구현합니다.)
	 예) 함수("abcdefghijk",3,7) = "defg"

      2) 문자열, 치환전문자, 치환후문자 를 매개변수로 주면
         주어진 문자열 내에 존재하는 치환전문자를 모두 치환후문자로 바꿔주는 함수를 구현하고 
	 실행결과를 제시하시오 (주의: replace와 같은 built-in 기능을 쓰지말고 직접 구현)
	 예) 함수("abcdacdadgnfagha","a","_") = "_bcd_cd_dgnf_gh_" 

문제6. 
      1) 5번에서 만든 두 함수 리터럴을 배열에 저장하고 배열에 저장된 함수를 실행시켜 
      다음 문제의 실행 결과를 제시하시오
      "ABCDABCDABCD" 의 0번 index에서 7번 index 까지의 문자중 "C" 를 space로 바꾼결과
      2) 객체를 프로퍼티의 값으로 갖는 서로 다른 객체 2개를 선언하고 해당 객체 값들을 불러내는 
          서로 다른 방법을 두 가지를 이용해 값을 불러내시오. 

문제7. 다음 정보를 관리할 수 있는 객체를 정의하고 객체가 정상 작동하는 것을 확인할 수 있는
명령문을 작성하세요
    요구사항 : 
      1) 2차원 배열정보를 관리할 수 있어야 합니다.
      2) 요구 메소드의 기능 
         메소드1(원소, index1, index2) 배열 원소를 매개변수로 전달하면 해당 원소가 배열인 경우 바로 배열에 push
	         배열이 아닌 경우 index 정보를 이용해 인덱스에 해당하는 배열 원소에 push
		 배열원소가 아니면서 index 가 전달되지 않은 경우 에러 반환
         메소드2(index1,index2) index1만 전달되면 해당원소 배열 삭제
	         index1, index2가 모두 전달되면 해당 2차원 원소 삭제
         메소드3() 배열전체 정보를 반환
	 메소드4(index) index 위치에 해당하는 1차원 배열정보 반환
      3) 위의 배열관리 객체가 정상하는지 확인하는 확인용 명령문


문제8. 문제7의 객체를 만들어낼 수 있는 객체 생성자 정의하고 객체 생성 결과 제시 

문제9. 
     1) 문제7의 객체와 같은 기능을 수행하는 클로져 정의

     2) 클로져를 이용해 2개의 객체를 관리하는 샘플을 작성하고 정상작동 여부를 확인할 수 있는 명령문 작성
     


문제10. 단가와 수량을 멤버로 가진 객체 생성자를 정의합니다
       객체 생성자 프로토타입에 this.단가와 this.수량 정보를 이용해 두 값의 곱을 계산해 금액을 돌려주는 멤버를 추가합니다
       vset의 단가와 수량을 곱한 총 합을 구하고자 합니다.
       앞에서 선언한 객체생성자를 이용해 객체를 한 개만 생성하여 품목들의 총 금액을 계산해 결과를 보여주는 함수를 작성하시오

       var set = [
                  {item:"pencil", up: 100, qty: 9},
                  {item:"eraser", up: 200, qty: 7},
                  {item:"notebook", up: 500, qty: 3},
                  {item:"compass", up: 300, qty: 2}
                 ] 


평가 기준 :

4. 함수의 실행여부, 결과의 정확성, 설명의 적절성

5. 제시된 조건을 만족하며 코드의 정상작동여부

6. 제시된 조건의 100% 만족여부

7. 코드의 정상 작동 여부와 조건 만족여부

8. 객체 생성후 7번 코드와 비교해 동일 객체가 생성되는지 여부

9. 코드의 동작여부와 7번 객체와 동일 기능 수행 여부

10. 메소드 reuse의 사용방법 숙지여부와 결과의 정확성