select * from tdept;
select * from temp;

select emp_id, emp_name, salary,birth_date from temp order by salary desc, birth_date;

select empno, name
from employee
where lower(name)='king';

select name,job, length(name), instr(name,'E') "contains 'E'?"
from employee
where substr(job,6)='MAN';

select * from employee;

select mod(salary,3000), round((salary/365),2), trunc((salary/365),2)
from temp;

select empno, (sysdate - hiredate) / 7 weeks
from employee
where deptno = 90;

select empno,(sysdate-hire_date)/7 weeks
from EMPLOYEE
where DEPTNO = 10;

ALTER TABLE EMPLOYEE
ADD (HIRE_DATE DATE NULL);

UPDATE EMPLOYEE
SET HIRE_DATE = TO_DATE(HIREDATE,'YYYY-MM-DD');
COMMIT;
DESC EMPLOYEE;

select empno, hire_date, months_between(sysdate, hire_date), 
        add_months(hire_date,5), next_day(hire_date, '금요일'), last_day(hire_date)
from employee
where months_between(sysdate, hire_date)<480;

select empno, to_char(hire_date, 'yyyy-mm-dd') hiredate
from employee;

select to_char(sysdate,'YYYY/MM/DD_HH24:MI:SS')
from dual;

SELECT TO_CHAR((TO_DATE('20190601131211','YYYYMMDDHH24MISS')),'YYYYMMDDHH24MISS')
FROM DUAL;

SELECT TO_CHAR(SALARY, 'L99,999.00')
FROM EMPLOYEE;

SELECT TO_NUMBER(TO_CHAR(SALARY))
FROM EMPLOYEE;

SELECT EMPNO, NAME, NVL(SALARY,0)
FROM EMPLOYEE;

SELECT EMPNO, NAME, NVL2(SALARY,'O','X')
FROM EMPLOYEE;

SELECT EMPNO, NAME, NULLIF(LENGTH(NAME),LENGTH(NAME))
FROM EMPLOYEE;

SELECT NAME, COALESCE(COMM,SALARY,0)
FROM EMPLOYEE;

SELECT EMPNO, NAME, NVL(TO_CHAR(BOSS),'BOSS없음')
FROM EMPLOYEE;

SELECT LPAD(NAME,10,'!') 
FROM EMPLOYEE;

SELECT RPAD(NAME,10,'!') 
FROM EMPLOYEE;

SELECT NAME, LTRIM(NAME,'JO')
FROM EMPLOYEE;

SELECT NAME, TRANSLATE(NAME,'A','*')
FROM EMPLOYEE;

SELECT NAME, REPLACE(NAME,'A','*')
FROM EMPLOYEE;

SELECT CEIL(21.003)
FROM DUAL;

SELECT FLOOR(21.003)
FROM DUAL;

SELECT POWER(2,4)
FROM DUAL;

SELECT SQRT(1024)
FROM DUAL;

SELECT SIGN(-100)
FROM DUAL;

SELECT SIGN(-100), SIGN(100), SIGN(0)
FROM DUAL;

SELECT ABS(-10)
FROM DUAL;

SELECT MOD(3,2)
FROM DUAL;

SELECT DECODE(1,1,1,2) 
FROM DUAL;

SELECT GREATEST(1,2),
        GREATEST(1,2,3),
        GREATEST('10','2','3'),
        GREATEST(SYSDATE,SYSDATE+1)
FROM DUAL;

SELECT LEAST(1,2),
        LEAST(1,2,3),
        LEAST('10','2','3'),
        LEAST(SYSDATE,SYSDATE+1)
FROM DUAL;

SELECT VSIZE('한글'), VSIZE('ABC'), LENGTHB('한글')
FROM DUAL;

SELECT SUBSTR('새나라에어린이는일찍일어납니다',6),SUBSTRB('새나라에어린이는일찍일어납니다',6)
FROM DUAL;

SELECT INSTR('새나라에어린이는일찍일어납니다','일'),INSTRB('새나라에어린이는일찍일어납니다','일')
FROM DUAL;

SELECT ROWNUM NO, CHR(ROWNUM)
FROM DBA_OBJECTS
WHERE ROWNUM <125;

SELECT ASCII('A')
FROM DUAL;

1.
SELECT *
FROM DBA_TABLES
WHERE TABLE_NAME = LOWER(TABLE_NAME);
2.
SELECT *
FROM DBA_OBJECTS
WHERE OBJECT_NAME = LOWER(OBJECT_NAME);
3.
SELECT EMP_ID, INITCAP(DEPT_CODE)
FROM TEMP;
4.
SELECT EMP_ID, LPAD(NVL(HOBBY,'*'),10,'*')
FROM TEMP;
5.
SELECT EMP_ID, RPAD(HOBBY,10,'*')
FROM TEMP;
6.
SELECT SUBSTR(EMP_ID,0,2), SUBSTR(DEPT_CODE,0,2)
FROM TEMP;
7.
SELECT SUBSTR(EMP_ID,4), SUBSTR(DEPT_CODE,4)
FROM TEMP;
8.
SELECT SUBSTR(EMP_ID,3,2), SUBSTR(DEPT_CODE,3,2)
FROM TEMP;
9.
SELECT EMP_ID,INSTR(DEPT_CODE,0)
FROM TEMP;
10.
SELECT DEPT_CODE, REPLACE(DEPT_NAME,'지원','**')
FROM TDEPT;
11.
SELECT DISTINCT CHR(89)
FROM DBA_OBJECTS;
12.
SELECT ASCII('!'),ASCII(' '),ASCII('~')
FROM DUAL;
13.
SELECT EMP_ID, ROUND(SALARY/12,2)
FROM TEMP;
14.
SELECT EMP_ID, TRUNC(SALARY/12,2)
FROM TEMP;
15.
SELECT ROWNUM, EMP_ID, EMP_NAME, ROWNUM/2, FLOOR(ROWNUM/3),CEIL(ROWNUM/3)
FROM TEMP;
16.
SELECT POWER(11,2), POWER(4,2), SQRT(556)
FROM DUAL;
17.
SELECT SIGN(-100), SIGN(100)
FROM DUAL;
18.
SELECT EMP_ID, MOD(SALARY,1000)
FROM TEMP;
19.
SELECT CEIL(ROWNUM/3) NO, EMP_ID, EMP_NAME
FROM TEMP;

--BONUS EX--
1.사번, 성명, 출생일, 출생일에 55개월 더한 날짜, 출생일에 55개월 뺀 날짜 가져오기
SELECT EMP_ID, EMP_NAME, BIRTH_DATE, ADD_MONTHS(BIRTH_DATE,55),  ADD_MONTHS(BIRTH_DATE,-55)
FROM TEMP;
2. 돌아오는 일요일과 목요일 날짜로 찾아내기
SELECT NEXT_DAY(SYSDATE,'일요일'),NEXT_DAY(SYSDATE,'목요일')
FROM DUAL;
3. EMP_ID, EMP_NAME, 출생일에 해당되는 년월의 마지막 일자 찾기
SELECT EMP_ID, EMP_NAME, LAST_DAY(BIRTH_DATE)
FROM TEMP;
4.현재시간을 '1980-01-25 00:00:00', '1980-JAN-25 000000' 와 같은 형식의 문자로 보여주기
SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE,'YYYY-MON-DD HH24MISS')
FROM DUAL;
5. EMP_ID, EMP_NAME, SALARY/12, SALARY/12를 소수점 아래 두 자리까지 보여주기
SELECT EMP_ID, EMP_NAME, TRUNC(SALARY/12,2)
FROM TEMP;
6. EMP_ID, EMP_NAME, HOBBY, HOBBY가 NULL이면 '0', 아니면 '1' 을 출력
SELECT EMP_ID, EMP_NAME, NVL2(HOBBY,1,0)
FROM TEMP;
7. EMP_ID, EMP_NAME, TEL, HOBBY, EMP_TYPE, TEL 있으면 TEL, 없으면 HOBBY, 그도없으면 EMP_TYPE을 보여주기
SELECT EMP_ID, EMP_NAME, TEL, HOBBY, EMP_TYPE, COALESCE(TEL, HOBBY, EMP_TYPE) 
FROM TEMP;

SELECT ROWNUM, NAME
FROM EMPLOYEE
WHERE NAME <'P'
ORDER BY NAME;

SELECT *
FROM EMPLOYEE
WHERE ROWNUM =1;

SELECT ROWNUM, EMP_ID, EMP_NAME
FROM TEMP
WHERE LEV ='과장';

SELECT ROWNUM, EMP_ID, EMP_NAME
FROM TEMP
WHERE LEV='과장' AND ROWNUM < 3;

SELECT ROWNUM, EMP_ID, EMP_NAME
FROM TEMP
WHERE LEV='과장' AND ROWNUM < 3 
ORDER BY EMP_NAME;

1.행 번호, 사번, 성명 가져오기
SELECT ROWNUM, EMP_ID, EMP_NAME
FROM TEMP;
2.1번 중 상위 5건만 가져오기
SELECT ROWNUM, EMP_ID, EMP_NAME
FROM TEMP
WHERE ROWNUM < 6;
3.취미가 없는 자료의 행번호, 사번, 성명을 EMP_ID 순으로 SORT해 상위 3건만 읽기
SELECT ROWNUM, 
    EMP_ID, 
    EMP_NAME,
    HOBBY
FROM (SELECT ROWNUM, EMP_ID, EMP_NAME, HOBBY
        FROM TEMP
        ORDER BY EMP_ID)
WHERE HOBBY IS NULL AND ROWNUM <= 3;
--
EXPLAIN PLAN FOR
SELECT * FROM TEMP
WHERE HOBBY IS NULL AND ROWNUM < 4
ORDER BY EMP_ID;
--
EXPLAIN PLAN FOR
SELECT * FROM TEMP
WHERE EMP_ID > 0 AND HOBBY IS NULL AND ROWNUM < 4;
--
ALTER SESSION
SET OPTIMIZER_MODE = 'RULE';
--
SELECT * 
FROM TABLE(DBMS_XPLAN.DISPLAY);
4.EMP_ID, LEV (LEV값이 수습=0, 사원=1, 대리=2, 과장=3,차장=4,부장=5,나머지=6)으로 나오는 컬럼
SELECT EMP_ID,DECODE(LEV,'수습',0,'사원',1,'대리',2,'과장',3,'차장',4,'부장',5,6)
FROM TEMP;
5.EMP_ID, 취미가 NULL이면 0 아니면 1로 나오는 컬럼
SELECT EMP_ID,NVL2(HOBBY,1,0)
FROM TEMP;
6.EMP_ID, 4천만원과 SALARY를 비교해서 4천만원 이하면 '적게' 아니면 '많이'로 나오는컬럼
SELECT EMP_ID,
    SALARY,
    DECODE(SIGN(40000000-SALARY), 1, '적게', -1, '많이')
FROM TEMP;
7.NULL이 아닌 자료만 EMP_ID, HOBBY, HOBBY가 독서나 바둑이면 '우와!' 아니면 '왜?' 리턴
SELECT EMP_ID, DECODE(HOBBY,'독서','우와!',DECODE(HOBBY,'바둑','우와!','왜?'))
FROM TEMP
WHERE HOBBY IS NOT NULL;
8.현재일자에서 1년에 12개월씩 40년을 뺀 값보다 BIRTH_DATE가 빠른 사람 중 EMP_ID,DEPT_CODE,HOBBY
    (취미가 없으면서 부서코드 첫자리가 'C' 이면 '섭외대상' 나머지는 '그냥나둬') 칼럼;
SELECT EMP_ID, DEPT_CODE, BIRTH_DATE, DECODE(SUBSTR(DEPT_CODE,0,1),'C','섭외대상','그냥나둬')
FROM TEMP
WHERE BIRTH_DATE <= ADD_MONTHS(SYSDATE,-480);