SELECT AVG(SALARY), SUM(SALARY), MAX(SALARY), MIN(SALARY)
FROM EMPLOYEE
WHERE DEPTNO = 30;

SELECT SALARY
FROM EMPLOYEE
WHERE DEPTNO = 30;

SELECT COMM
FROM EMPLOYEE
WHERE DEPTNO = 30;

SELECT COUNT(COMM)
FROM EMPLOYEE
WHERE DEPTNO = 30;

SELECT AVG(COMM)
FROM EMPLOYEE;

SELECT AVG(NVL(COMM,0))
FROM EMPLOYEE;

SELECT JOB, AVG(SALARY)
FROM EMPLOYEE
GROUP BY JOB;

SELECT DEPTNO, JOB, AVG(SALARY)
FROM EMPLOYEE
GROUP BY JOB, DEPTNO
ORDER BY DEPTNO DESC;

SELECT JOB, AVG(SALARY)
FROM EMPLOYEE
WHERE AVG(SALARY) > 4000
GROUP BY JOB;

SELECT JOB, AVG(SALARY)
FROM EMPLOYEE
GROUP BY JOB
HAVING AVG(SALARY) > 4000;

SELECT JOB, MIN(SALARY)
FROM EMPLOYEE
GROUP BY JOB
HAVING MIN(SALARY) > 1000
ORDER BY MIN(SALARY);

SELECT COUNT(DISTINCT TO_CHAR(BIRTH_DATE,'YY'))
FROM TEMP;

1.생년별 인원수, SALARY 평균, 최고 SALARY, 최저 SALARY, SALARY 총합, 분산, 표준편차
SELECT TO_CHAR(BIRTH_DATE,'YY'),COUNT(EMP_ID), AVG(SALARY), MAX(SALARY), MIN(SALARY), SUM(SALARY), VARIANCE(SALARY), STDDEV(SALARY)
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YY')
ORDER BY TO_CHAR(BIRTH_DATE,'YY') DESC;

2.1번의 결과 중 SALARY평균이 5천만원 이상인 건만 조회하기
SELECT TO_CHAR(BIRTH_DATE,'YY'),COUNT(EMP_ID), AVG(SALARY), MAX(SALARY), MIN(SALARY), SUM(SALARY), VARIANCE(SALARY), STDDEV(SALARY)
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YY')
HAVING AVG(SALARY) > 50000000
ORDER BY TO_CHAR(BIRTH_DATE,'YY');

3.생년별 인원수, SALARY 평균, SALARY 총합/인원수 결과 관찰 마지막 두 컬럼이 같은지 다른지
SELECT TO_CHAR(BIRTH_DATE,'YY'),COUNT(EMP_ID), AVG(SALARY), SUM(SALARY)/COUNT(EMP_ID)
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YY')
ORDER BY TO_CHAR(BIRTH_DATE,'YY');

4.생년별, 취미 별 GROUP BY 적용해 인원수, 평균 SALARY 가져오기
SELECT TO_CHAR(BIRTH_DATE,'YY'), HOBBY, 1, SALARY
FROM TEMP
ORDER BY 1,2;
--
SELECT TO_CHAR(BIRTH_DATE,'YY'),HOBBY, AVG(SALARY), COUNT(EMP_ID)
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YY'), HOBBY
ORDER BY TO_CHAR(BIRTH_DATE,'YY');

5.HOBBY별 평균 SALARY
SELECT HOBBY, AVG(SALARY), SUM(SALARY)/COUNT(*)
FROM TEMP
GROUP BY HOBBY;

6.5번 평균 SALARY의 최소 값
SELECT HOBBY, AVG(SALARY)
FROM TEMP
GROUP BY HOBBY
HAVING AVG(SALARY) = 
        (SELECT MIN(AVG(SALARY))
        FROM TEMP
        GROUP BY HOBBY);

과제 1. 생년별 최고 MAX(SALARY), MAX(EMP_ID) 를 읽어 오기 
    ==> 1번 결과가 테이블에서 같은 레코드인지 아닌지 체크하기
SELECT TO_CHAR(BIRTH_DATE,'YYYY'), SALARY, EMP_ID
FROM TEMP
ORDER BY 1;
--
SELECT YYYY, MSAL, (SELECT SALARY FROM TEMP WHERE EMP_ID = T1.MID) ID
FROM (  
        SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY, MAX(SALARY) MSAL, MAX(EMP_ID) MID
        FROM TEMP
        GROUP BY TO_CHAR(BIRTH_DATE,'YYYY')
        ) T1;
--
SELECT SALARY + EMP_ID/POWER(10,8)
FROM TEMP; --샐러리랑 EMPID랑 합체--
--
SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY,
        MAX(SALARY + EMP_ID/POWER(10,8)) MSAL
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YYYY')
ORDER BY 1;
--분리-- -매치가 안되기 때문에 합체한후 분리--
SELECT YYYY,
        TRUNC(MSAL) SAL,
        (MSAL - TRUNC(MSAL)) * POWER(10,8) EMP_ID
FROM (SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY,
        MAX(SALARY + EMP_ID/POWER(10,8)) MSAL
        FROM TEMP
        GROUP BY TO_CHAR(BIRTH_DATE,'YYYY')
        )
ORDER BY 1;
--문자 데이터인 경우--
SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY,
        MAX(LPAD(TO_CHAR(SALARY),12,'!') ||'*'|| TO_CHAR(EMP_ID)) FST,
        MIN(LPAD(TO_CHAR(SALARY),12,'!') ||'*'|| TO_CHAR(EMP_ID)) LST
FROM TEMP
GROUP BY TO_CHAR(BIRTH_DATE,'YYYY');
--문자데이터분리--
SELECT YYYY, 
        TO_NUMBER(SUBSTR(FST,14)) MID,
        TO_NUMBER(LTRIM(SUBSTR(FST,1,12),'!')) MSAL, 
        TO_NUMBER(LTRIM(SUBSTR(LST,1,12),'!')) MNSAL 
FROM (SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY,
        MAX(LPAD(TO_CHAR(SALARY),12,'!') ||'*'|| TO_CHAR(EMP_ID)) FST,
        MIN(LPAD(TO_CHAR(SALARY),12,'!') ||'*'|| TO_CHAR(EMP_ID)) LST
        FROM TEMP
        GROUP BY TO_CHAR(BIRTH_DATE,'YYYY'))
ORDER BY YYYY;
--서브쿼리사용해서 하기--
SELECT TO_CHAR(BIRTH_DATE,'YYYY') YYYY,
        MAX(SALARY), MAX(EMP_ID)
FROM TEMP A
WHERE SALARY = 
        (SELECT MAX(SALARY)
        FROM TEMP B
        WHERE TO_CHAR(B.BIRTH_DATE,'YYYY') =
               TO_CHAR(A.BIRTH_DATE,'YYYY')
        )
GROUP BY TO_CHAR(A.BIRTH_DATE,'YYYY')
ORDER BY 1;
-테이블 생성-
CREATE TABLE SALE_HIST(SALE_NO NUMBER PRIMARY KEY,
                        SALE_DATE VARCHAR2(08) NOT NULL,
                        SALE_SITE NUMBER NOT NULL,
                        SALE_ITEM VARCHAR(10) NOT NULL,
                        SALE_AMT NUMBER,
                        SALE_EMP NUMBER
                        );
--테이블 데이터 전부삭제--
TRUNCATE TABLE SALE_HIST;

--과제3. SALEHIST 자료를 이용해 집계 테이블에 데이터를 INSERT 하고자 합니다 
   --세 가지 CASE에 대해 SQL 을 작성합니다.
   --INSERT 문은 필요없고 SELECT만 작성

SELECT SALE_DATE, SUM(SALE_AMT), COUNT(*)
FROM SALE_HIST
GROUP BY SALE_DATE
ORDER BY 1;

SELECT SALE_SITE, SALE_ITEM, SUM(SALE_AMT), COUNT(*)
FROM SALE_HIST
GROUP BY SALE_SITE, SALE_ITEM
ORDER BY 1;

SELECT SUBSTR(SALE_DATE,5,2), SALE_ITEM, SUM(SALE_AMT), COUNT(*)
FROM SALE_HIST
GROUP BY SUBSTR(SALE_DATE,5,2), SALE_ITEM
ORDER BY 1;

--과제4,
--년월,제품,항목,금액으로 구성된 TEST17은 년월,제품별로 항목(62099011:매출수량, 62099101:총원가)에 대한
--금액을 관리하는 있는 테이블
--단위당변동원가 = (최고판매량의원가 - 최저판매량의원가)/(최고판매량 - 최저판매량)
--고정원가 = 최고판매량원가 - (단위당변동원가*최고판매량)
--최고 판매량의 원가는 12개월 중 해당제품의 판매량이 최고인 월의 총원가를 의미한다.
--문제-- 제품별로 1998년 03월보다 작은 월의 12개월 치 DATA를 이용해서 1998년 03월 매출수량별 총원가를 구하기 위한
--       제품별 단위당변동원가와 고정원가를 구하라
--수량과 원가를 쪼갬
SELECT YYMM_YM, 
        ITEM_CD, 
        SUM(DECODE(BUDGET_CD,'62099011',PROD_AM)) Q,  --SUM이든 MAX든 아무거나 하면댐 그룹바이 쓰려고하는거임--
        MAX(DECODE(BUDGET_CD,'62099101',PROD_AM)) C
FROM TEST17
WHERE YYMM_YM >= '199703' AND YYMM_YM < '199803'
GROUP BY YYMM_YM, ITEM_CD
ORDER BY 1,2;
--최고월과 최소월의 량과 원가를 끄집어냄
SELECT ITEM_CD,
        MIN(Q) Q1,
        (MIN(Q+C/POWER(10,15)) - MIN(Q)) * POWER(10,15) C1,     --MIN(Q)에 해당하는 원가 C1
        MAX(Q) Q2,
        (MAX(Q+C/POWER(10,15)) - MAX(Q)) * POWER(10,15) C2     --MAX(Q)에 해당하는 원가 C2
FROM (
        SELECT YYMM_YM, 
        ITEM_CD, 
        SUM(DECODE(BUDGET_CD,'62099011',PROD_AM)) Q,  --SUM이든 MAX든 아무거나 하면댐 그룹바이 쓰려고하는거임--
        MAX(DECODE(BUDGET_CD,'62099101',PROD_AM)) C
        FROM TEST17
        WHERE YYMM_YM >= '199703' AND YYMM_YM < '199803'
        GROUP BY YYMM_YM, ITEM_CD
        )
GROUP BY ITEM_CD
ORDER BY 1;

SELECT ITEM_CD,
       ROUND((C2-C1)/DECODE(Q2,Q1,NULL,Q2-Q1)) 단위당변동원가,
       ROUND(C2-((C2-C1)/DECODE(Q2,Q1,NULL,Q2-Q1)*Q2)) 고정원가
FROM (
        SELECT ITEM_CD,
        MIN(Q) Q1,
        (MIN(Q+C/POWER(10,15)) - MIN(Q)) * POWER(10,15) C1,     --MIN(Q)에 해당하는 원가 C1
        MAX(Q) Q2,
        (MAX(Q+C/POWER(10,15)) - MAX(Q)) * POWER(10,15) C2      --MAX(Q)에 해당하는 원가 C2
        FROM (
                SELECT YYMM_YM, 
                ITEM_CD, 
                SUM(DECODE(BUDGET_CD,'62099011',PROD_AM)) Q,  --SUM이든 MAX든 아무거나 하면댐 그룹바이 쓰려고하는거임--
                MAX(DECODE(BUDGET_CD,'62099101',PROD_AM)) C
                FROM TEST17
                WHERE YYMM_YM >= '199703' AND YYMM_YM < '199803'
                GROUP BY YYMM_YM, ITEM_CD
                )
        GROUP BY ITEM_CD
)
ORDER BY 1;