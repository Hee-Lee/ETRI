--BOTTOM UP 방식
SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, MANAGER_ID
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 101
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;
--TOP DOWN 방식
SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, MANAGER_ID
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 101
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;

SELECT * FROM EMPLOYEES;
--LEVEL과 LPAD사용 계층검색
COLUMN ORG_CHART FORMAT A12
SELECT LPAD (LAST_NAME, LENGTH(LAST_NAME) + (LEVEL*2)-2, '_')
        AS ORG_CHART
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 100
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;
--WHERE 절 사용 값만 지우기
SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, MANAGER_ID
FROM EMPLOYEES
WHERE LAST_NAME != 'Higgins'
START WITH EMPLOYEE_ID = 101
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;
--LEVEL 밑에까지 다 지우기
SELECT EMPLOYEE_ID, LAST_NAME, JOB_ID, MANAGER_ID
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 101
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID
AND LAST_NAME != 'Higgins';
--TEMP 추가
INSERT INTO TEMP(
EMP_ID,
EMP_NAME,
BIRTH_DATE,
DEPT_CODE,
EMP_TYPE,
USE_YN,
TEL,
HOBBY,
SALARY,
LEV,
EVAL_YN)
--VALUES(20180101, '사장야', ADD_MONTHS(SYSDATE, 45*12), 'CEO001', '정규', 'Y', '01040404040','갑액션',500000000,'회장','N');
VALUES (20180109,'소운영',ADD_MONTHS(SYSDATE,48*12),'COO001','정규','Y','01050505050','게임',300000000,'사장','N');
SELECT * FROM TEMP;
SELECT COLUMN_NAME || ','
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'TEMP';
--TDEPT 추가
--1.코드 : CEO001, 부서명 : '대표이사실', 상위부서 : NULL
--  USE_YN : Y, AREA : NULL, BOSS_ID : 20180101
INSERT INTO TDEPT(DEPT_CODE,DEPT_NAME,PARENT_DEPT,USE_YN,AREA,BOSS_ID)
VALUES ('CEO001','대표이사실',NULL,'Y',NULL,NULL);
UPDATE TDEPT
SET BOSS_ID = 20180101
WHERE DEPT_CODE = 'CEO001';
SELECT * FROM TDEPT;
--2.코드 : COO001, 부서명 : '운영총괄실', 상위부서 : CEO001
--  USE_YN : Y, AREA : NULL, BOSS_ID : 201810109
INSERT INTO TDEPT(DEPT_CODE,DEPT_NAME,PARENT_DEPT,USE_YN,AREA,BOSS_ID)
VALUES ('COO001','운영총괄실','CEO001','Y',NULL,NULL);
UPDATE TDEPT
SET BOSS_ID = 20180109
WHERE DEPT_CODE = 'COO001';
SELECT * FROM TDEPT;
--3.코드 : CTO001, 부서명 : '기술총괄실', 상위부서 : CEO001
--  USE_YN : Y, AREA : NULL, BOSS_ID : 20180103
INSERT INTO TDEPT(DEPT_CODE,DEPT_NAME,PARENT_DEPT,USE_YN,AREA,BOSS_ID)
VALUES ('CTO001','기술총괄실','CEO001','Y',NULL,NULL);
UPDATE TDEPT
SET BOSS_ID = 20180103
WHERE DEPT_CODE = 'CTO001';
SELECT * FROM TDEPT;
--4.코드 : CSO001, 부서명 : '영업총괄실', 상위부서 : CEO001
--  USE_YN : Y, AREA : NULL, BOSS_ID : 20190805
INSERT INTO TDEPT(DEPT_CODE,DEPT_NAME,PARENT_DEPT,USE_YN,AREA,BOSS_ID)
VALUES ('CSO001','영업총괄실','CEO001','Y',NULL,NULL);
UPDATE TDEPT
SET BOSS_ID = 20190805
WHERE DEPT_CODE = 'CSO001';
SELECT * FROM TDEPT;
--5.TEMP 에서 20190803(CTO001), 20190805(CSO001) 부서코드 변경
UPDATE TEMP
SET DEPT_CODE = 'CTO001'
WHERE EMP_ID = 20190803;
UPDATE TEMP
SET DEPT_CODE = 'CSO001'
WHERE EMP_ID = 20190805;
COMMIT;
--6.재무, 총무의 상위조직은 경영지원이며, H/W, S/W지원 상위조직은 기술지원이고,
--  영업기획, 영업1, 영업2의 상위조직은 영업입니다.
--7.경영지원의 상위조직은 운영총괄임원실,
--  기술지원의 상위조식은 기술총괄인원실,
--  영업의 상위조직은 영업총괄 임원실입니다.
SELECT * FROM TDEPT;
UPDATE TDEPT
SET PARENT_DEPT = 'COO001'
WHERE DEPT_NAME = '경영지원';
UPDATE TDEPT
SET PARENT_DEPT = 'CTO001'
WHERE DEPT_NAME = '기술지원';
UPDATE TDEPT
SET PARENT_DEPT = 'CSO001'
WHERE DEPT_NAME = '영업';
--8.대표이사 AREA 본사
--  각 임원실의 AREA는 하위부서의 AREA와 동일합니다. UPDATE 3개
UPDATE TDEPT
SET AREA = '본사'
WHERE DEPT_NAME = '대표이사실';
UPDATE TDEPT
SET AREA = '서울'
WHERE DEPT_NAME = '운영총괄실';
UPDATE TDEPT
SET AREA = '인천'
WHERE DEPT_NAME = '기술총괄실';
UPDATE TDEPT
SET AREA = '본사'
WHERE DEPT_NAME = '영업총괄실';
SELECT * FROM TDEPT;
--문제 
--LEVEL 별  INDENRATION 필수
--1.DEPT의 부서코드와 상위부서코드 정보를 이용해 CEO001에서 시작해 TOP-DOWN 방식의 계층 검색
SELECT  DEPT_CODE, DEPT_NAME
FROM TDEPT
START WITH DEPT_CODE = 'CEO001'
CONNECT BY PRIOR DEPT_CODE = PARENT_DEPT;
--2.DEPT의 부서코드와 상위부서코드 정보를 이용해 CEO001에서 시작해 BOTTOM-DOWN 방식의 계층 검색
SELECT  DEPT_CODE, DEPT_NAME
FROM TDEPT
START WITH DEPT_CODE = 'CEO001'
CONNECT BY PRIOR PARENT_DEPT = DEPT_CODE;
--3.CSO001에서 시작하는 TOP-DOWN 방식의 계층검색
SELECT  DEPT_CODE, DEPT_NAME
FROM TDEPT
START WITH DEPT_CODE = 'CSO001'
CONNECT BY PRIOR DEPT_CODE = PARENT_DEPT;
--4.1번에서 경영지원(AA0001)만 조직에서 제외
SELECT  DEPT_CODE, DEPT_NAME
FROM TDEPT
WHERE DEPT_CODE != 'AA0001'
START WITH DEPT_CODE = 'CEO001'
CONNECT BY PRIOR DEPT_CODE = PARENT_DEPT;
--5.1번에서 경영지원(AA0001)을 포함한 하위조직 제외
SELECT  DEPT_CODE, DEPT_NAME
FROM TDEPT
START WITH DEPT_CODE = 'CEO001'
CONNECT BY PRIOR DEPT_CODE = PARENT_DEPT
AND DEPT_CODE != 'AA0001';
--
INSERT INTO TDEPT VALUES('CB0002','영업기획2','CA0001','Y','본사',19960303);

SELECT * FROM TDEPT;
--직원정보와 직원의 BOSS 정보를 찾아 직원 계층 검색을 지원하는 VEMP_BOSS VIEW 생성하시오.
-- 내가 부서장이 아니면 내가 속한 부서의 boss_id 나의 보스
-- 내가 부서장이면 내가 속한 상위부서의 boss_id가 나의 보스
CREATE OR REPLACE VIEW VEMP_BOSS AS
SELECT A.EMP_ID, A.EMP_NAME, A.DEPT_CODE,
        DECODE(A.EMP_ID, B.BOSS_ID, C.BOSS_ID, B.BOSS_ID) BOSS_ID,
        D.EMP_NAME BOSS_NAME, D.DEPT_CODE BOSS_DEPT, A.SALARY
FROM TEMP A, TDEPT B, TDEPT C, TEMP D
WHERE A.DEPT_CODE = B.DEPT_CODE
AND C.DEPT_CODE = B.PARENT_DEPT
AND D.EMP_ID = DECODE(A.EMP_ID,B.BOSS_ID,C.BOSS_ID,B.BOSS_ID)
UNION ALL
SELECT EMP_ID, EMP_NAME, DEPT_CODE, NULL, NULL, NULL, SALARY FROM TEMP
WHERE DEPT_CODE = (SELECT DEPT_CODE FROM TDEPT WHERE PARENT_DEPT IS NULL);

SELECT * FROM TDEPT;
SELECT * FROM TEMP;

--6. 20180101에서 시작하는 직원의 TOP-DOWN 계층검색(밀어넣기 필수)
COLUMN ORG_CHART FORMAT A12
SELECT LPAD(DEPT_CODE, LENGTH(DEPT_CODE) + (LEVEL*4) - 2, '-') AS ORG_CHART,
       EMP_NAME
FROM VEMP_BOSS
START WITH EMP_ID = 20180101
CONNECT BY PRIOR EMP_NAME = BOSS_NAME;
--7. 정북악에서 시작하는 상향 계층 검색
COLUMN ORG_CHART FORMAT A12
SELECT LPAD(DEPT_CODE, LENGTH(DEPT_CODE) + (LEVEL*4) - 2, '-') AS ORG_CHART,
       EMP_NAME
FROM VEMP_BOSS
START WITH EMP_NAME = '정북악'
CONNECT BY PRIOR BOSS_ID = EMP_ID;

--BONUS
SELECT LPAD(DEPT_CODE, LENGTH(DEPT_CODE) + (LEVEL*4) - 2, '-') AS E_ID,
       EMP_NAME, BOSS_ID, BOSS_NAME
FROM VEMP_BOSS
START WITH EMP_ID = 20180101
CONNECT BY PRIOR EMP_NAME = BOSS_NAME;
--
CREATE TABLE EMP_BOSS AS
SELECT * FROM VEMP_BOSS;
--EMP_BOSS의 EMP_ID PK 생성 : EMP_BOSS_PK
ALTER TABLE EMP_BOSS
ADD CONSTRAINTS EMP_BOSS_PK PRIMARY KEY (EMP_ID);
--EMP_BOSS INDEX 생성 EMP_NAME : INX_EMM1;
CREATE INDEX INX_EMM1 ON EMP_BOSS (EMP_NAME);
--인덱스 확인
explain plan for
SELECT LPAD(DEPT_CODE, LENGTH(DEPT_CODE) + (LEVEL*4) - 2, '-') AS E_ID,
       EMP_NAME, BOSS_ID, BOSS_NAME
FROM VEMP_BOSS
START WITH EMP_ID = 20180101
CONNECT BY PRIOR EMP_NAME = BOSS_NAME;
select plan_table_output from table(dbms_xplan.display());

--VEMP_BOSS SALARY 계층검색을 이용해 상위부서로 샐러리집계
SELECT LPAD(DEPT_CODE, LENGTH(DEPT_CODE) + (LEVEL*4) - 2, '-') AS E_ID,
       EMP_NAME, DEPT_CODE, BOSS_DEPT, SALARY,
       (SELECT SUM(SALARY)
        FROM VEMP_BOSS B
        START WITH B.EMP_ID = A.EMP_ID
        CONNECT BY PRIOR EMP_NAME = BOSS_NAME)
FROM VEMP_BOSS A
START WITH EMP_ID = 20180101
CONNECT BY PRIOR EMP_NAME = BOSS_NAME;
--